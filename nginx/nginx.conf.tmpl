### WARNING: DO NOT EDIT THIS FILE - ALL CHANGES WILL BE LOST!        ###
### THE CONTENTS OF THIS FILE ARE GENERATED AND UPDATED AUTOMATICALLY ###
{{/* */}}
{{- if not .Daemon}}
daemon off;{{end}}

{{- if .ErrorLogFile}}
error_log {{.ErrorLogFile}}{{if .ErrorLogLevel}} {{.ErrorLogLevel}}{{end}};{{end}}

{{- range $envVar, $envVal := .Environment}}
env {{$envVar -}}{{if $envVal}}={{- $envVal}}{{end}};{{end -}}

{{- if .LockFile}}
lock_file {{.LockFile}};{{end}}

{{- if .PidFile}}
pid {{.PidFile}};{{end}}

{{- if .User}}
user {{.User}}{{if .Group}} {{.Group}}{{end}};{{end}}

{{- if .WorkerPriority}}
worker_priority {{.WorkerPriority}};{{end}}

{{- if .WorkerProcesses}}
worker_processes {{.WorkerProcesses}};{{end}}

{{- if .WorkingDirectory}}
working_directory {{.WorkingDirectory}};{{end}}

{{- with .EventContext }}

events {
    {{- if .AcceptMutex}}
    accept_mutex on{{end}}

    {{- if .AcceptMutexDelay}}
    accept_mutex_delay {{.AcceptMutexDelay}}{{end}}

    {{- if .MultiAccept}}
    multi_accept on{{end}}

    {{- if .WorkerConnections}}
    worker_connections {{.WorkerConnections}};
    {{- else}}
    worker_connections 512;
    {{- end}}
}
{{end}}
{{- if .DefaultHTTPServer}}

http {
    {{with .HTTPContext}}
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    {{- if .HTTPSnippets}}
    {{range $value := .HTTPSnippets}}
    {{$value}}{{end}}
    {{- end}}

    {{if .LogFormat -}}
    log_format  main  '{{.LogFormat}}';
    {{- else -}}
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    {{- end }}
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server_names_hash_max_size {{.ServerNamesHashMaxSize}};
    {{if .ServerNamesHashBucketSize}}server_names_hash_bucket_size {{.ServerNamesHashBucketSize}};{{end}}

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    {{if .SSLProtocols}}ssl_protocols {{.SSLProtocols}};{{end}}
    {{if .SSLCiphers}}ssl_ciphers "{{.SSLCiphers}}";{{end}}
    {{if .SSLPreferServerCiphers}}ssl_prefer_server_ciphers on;{{end}}
    {{if .SSLDHParam}}ssl_dhparam {{.SSLDHParam}};{{end}}

    {{if .HealthStatus}}
    server {
        listen 80 default_server;
        server_name _;

        location /nginx-health {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }
    }
    {{end}}

    include /etc/nginx/conf.d/*.conf;
    {{end}}
}
{{end}}

include /etc/nginx/conf.d/*.conf;

